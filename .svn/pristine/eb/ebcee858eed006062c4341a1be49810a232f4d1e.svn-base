/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nibbles;

import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;

/**
 *
 * @author karrmanns
 */
public class Level {
    
    private static final int UNIT = 10;
    private ArrayList<ICollidable> collidable;
    private ArrayList<IDrawable> drawable;
    private ArrayList<Pair> foodLocations = new ArrayList<>();
    private ArrayList<Pair> spawnLocations = new ArrayList<>();
    Graphics graphics;
    
    public static final int TOP_OFFSET = 45;
    
    public Level(String fileName, ArrayList<ICollidable> collidables, ArrayList<IDrawable> drawables, Graphics gIn) {
        collidable = collidables;
        drawable = drawables;
        graphics = gIn;
        try {
            BufferedReader reader = new BufferedReader(new FileReader("src\\nibbles\\Levels\\" + fileName + ".txt"));
            ArrayList<char[]> lines = new ArrayList<>();
            String temp = reader.readLine();
            while(temp != null) {
                lines.add(temp.toCharArray());
                temp = reader.readLine();
            }
            for(int i = 0; i < lines.size(); i ++)
                readArray(lines.get(i), i);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void readArray(char[] array, int currentLine) {
        for(int i = 0; i < array.length; i ++) {
            char current = array[i];
            Pair coords = new Pair(i * UNIT, currentLine * UNIT + TOP_OFFSET);
            switch (current) {
                case 'x':
                case 'X':
                    Wall wall = new Wall(coords.x, coords.y, UNIT, UNIT, graphics);
                    drawable.add(wall);
                    collidable.add(wall);
                    break;
                case 'e':
                case 'E':
                    foodLocations.add(coords);
                    break;
                case 's':
                case 'S':
                    spawnLocations.add(coords);
                    break;
            }
        }
    }
    
    public Pair getRandomFoodSpawn() {
        return foodLocations.get((int) (Math.random() * (foodLocations.size() - 1)));
    }
    
}
